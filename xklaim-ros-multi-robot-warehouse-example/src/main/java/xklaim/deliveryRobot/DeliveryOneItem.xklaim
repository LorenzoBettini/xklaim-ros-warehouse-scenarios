package xklaim.arm

import klava.Locality
import xklaim.deliveryRobot.MoveTo
import xklaim.deliveryRobot.WaitForItem

proc DeliveryOneItem(String robotId,String sector,Locality Arm) {
	// retrieve the ROS bridge URI 
	read("rosbridgeWebsocketURI",val String rosbridgeWebsocketURI)@self
	
	// wait for a call by the arm robot
	in("itemReadyForTheDelivery",sector)@Arm

	// move to the arm position (notably, the arm robot has a fixed, known position)  
	val x = -0.21
	val y = 0.31
	eval(new MoveTo(robotId, sector, x, y))@self
	in("moveToCompleted")@self

	// notify the arm robot that it is arrived and is ready to receive the item
	out("deliveryRobotArrived")@Arm

	// wait for the notification that the gripper is opened 
	in("gripperOpened",var String itemId,var String itemType)@Arm

	// activate the pressure sensor for detecting the presence of the item in the bowl and wait for the item
	eval(new WaitForItem(robotId))@self
	in("itemLoaded")@self

	// retrieve from the local knowledge the delivery destination coordinates
	read("type2destination",itemType,var Double x2,var Double y2)@self

	// move to the delivery destination position
	eval(new MoveTo(robotId, sector, x2, y2))@self
	in("moveToCompleted")@self

	// notify that the item with identifier itemId has been delivered
	var String coordinates = "(" + x2 + "," + y2 + ")" 
	out("itemDelivered",itemId,coordinates)@self

	// set the robot as available for a new delivery
	out("availableForDelivery")@self
}
