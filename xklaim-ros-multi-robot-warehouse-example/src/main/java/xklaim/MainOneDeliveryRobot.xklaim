package xklaim

import xklaim.arm.ArmBehaviour
import xklaim.singleDeliveryRobot.DeliveryRobotBehaviour

import static xklaim.GlobalConstants.*

net MRS_one_delivery physical "localhost:9999" {
	node Arm {
		eval(new ArmBehaviour())@self
	}

	node DeliveryRobot1 {
		val robotId = "robot1"
		val sector = "sector1"
		eval(new DeliveryRobotBehaviour(robotId, sector, Arm))@self
	}

	node SimulationHandler {
		// --- initial setup of the scenario ---
		// insert info about items (id, warehouse destination sector, type and coordinates)  
		// in the arm robot's local knowledge (i.e., its tuple space) 			
		out(ITEM,"item1","sector1","red",0.583518, 0.0)@Arm
		out(ITEM,"item2","sector1","red",0.554542, 0.187360)@Arm
		out(ITEM,"item3","sector1","red",0.504, 0.307)@Arm
		out(ITEM,"item4","sector1","red",0.332977,0.470854)@Arm

		// activate the processes in charge of unloading items from delivery robots and posing them in the ground  
		// (there is one process for each pickup area)
		eval(new Unload(DeliveryRobot1, -8.0, 0.0))@self
	}
}

